{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Flex, FlexItem, FlexCentered } from \"../styles/general/General.styled\";\nimport { SignUpImage, TextField } from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Form, Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignInOut = () => {\n  _s();\n\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      p: \"10rem 4rem\",\n      mh: \"100vh\",\n      bgColor: \"rgba(224, 247, 250, 0.8)\",\n      h: \"60%\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        bgColor: \"#f3e5f5\",\n        h: \"60vh\",\n        br: \"6rem\",\n        children: [/*#__PURE__*/_jsxDEV(FlexItem, {\n          fg: \"1\",\n          h: \"60vh\",\n          children: /*#__PURE__*/_jsxDEV(SignUpImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexItem, {\n          w: \"75%\",\n          children: /*#__PURE__*/_jsxDEV(FlexCentered, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: initialValues,\n              onSubmit: (values, {\n                setSubmitting,\n                resetForm\n              }) => {\n                setTimeout(() => {\n                  setSubmitting(false); // dispatch(registerUser(values));\n\n                  resetForm();\n                }, 1500);\n              },\n              children: ({\n                values,\n                errors,\n                isSubmitting\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"First Name\",\n                  name: \"firstName\",\n                  type: \"input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Last Name\",\n                  name: \"lastName\",\n                  type: \"input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Email Address\",\n                  name: \"email\",\n                  type: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"password\",\n                  label: \"Password\",\n                  type: showPw ? \"text\" : \"password\",\n                  className: \"passwordField\",\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => setShowPw(!showPw),\n                        children: showPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 75,\n                          columnNumber: 33\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 27\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"passwordConfirm\",\n                  label: \"Confirm Password\",\n                  type: showConfirmPw ? \"text\" : \"password\",\n                  className: \"passwordField\",\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => setShowConfirmPw(!showConfirmPw),\n                        children: showConfirmPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 33\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 27\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  fullWidth: true,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  disabled: isSubmitting,\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignInOut, \"2p8ny6BI6b16B9fOoyLogYOFfzM=\");\n\n_c = SignInOut;\nexport default SignInOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInOut\");","map":{"version":3,"sources":["/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js"],"names":["React","useState","Container","Flex","FlexItem","FlexCentered","SignUpImage","TextField","Navbar","Form","Formik","VisibilityIcon","VisibilityOffIcon","IconButton","InputAdornment","Button","SignInOut","initialValues","firstName","lastName","email","password","passwordConfirm","showPw","setShowPw","showConfirmPw","setShowConfirmPw","values","setSubmitting","resetForm","setTimeout","errors","isSubmitting","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Flex,\n  FlexItem,\n  FlexCentered\n} from \"../styles/general/General.styled\";\nimport { SignUpImage, TextField } from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Form, Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Button from \"@mui/material/Button\";\n\nconst SignInOut = () => {\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n\n  return (\n    <>\n      <Navbar />\n      <Container\n        p=\"10rem 4rem\"\n        mh=\"100vh\"\n        bgColor=\"rgba(224, 247, 250, 0.8)\"\n        h=\"60%\">\n        <Flex bgColor=\"#f3e5f5\" h=\"60vh\" br=\"6rem\">\n          <FlexItem fg=\"1\" h=\"60vh\">\n            <SignUpImage />\n          </FlexItem>\n          <FlexItem w=\"75%\">\n            <FlexCentered>\n              <Formik\n                initialValues={initialValues}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setTimeout(() => {\n                    setSubmitting(false);\n                    // dispatch(registerUser(values));\n                    resetForm();\n                  }, 1500);\n                }}>\n                {({ values, errors, isSubmitting }) => (\n                  <Form>\n                    <TextField\n                      label=\"First Name\"\n                      name=\"firstName\"\n                      type=\"input\"\n                    />\n                    <TextField label=\"Last Name\" name=\"lastName\" type=\"input\" />\n                    <TextField\n                      label=\"Email Address\"\n                      name=\"email\"\n                      type=\"email\"\n                    />\n                    <TextField\n                      name=\"password\"\n                      label=\"Password\"\n                      type={showPw ? \"text\" : \"password\"}\n                      className=\"passwordField\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment>\n                            <IconButton onClick={() => setShowPw(!showPw)}>\n                              {showPw ? (\n                                <VisibilityOffIcon />\n                              ) : (\n                                <VisibilityIcon />\n                              )}\n                            </IconButton>\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <TextField\n                      name=\"passwordConfirm\"\n                      label=\"Confirm Password\"\n                      type={showConfirmPw ? \"text\" : \"password\"}\n                      className=\"passwordField\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment>\n                            <IconButton\n                              onClick={() => setShowConfirmPw(!showConfirmPw)}>\n                              {showConfirmPw ? (\n                                <VisibilityOffIcon />\n                              ) : (\n                                <VisibilityIcon />\n                              )}\n                            </IconButton>\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={isSubmitting}>\n                      Sign Up\n                    </Button>\n                    {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n                  </Form>\n                )}\n              </Formik>\n            </FlexCentered>\n          </FlexItem>\n        </Flex>\n      </Container>\n    </>\n  );\n};\n\nexport default SignInOut;\n"]},"metadata":{},"sourceType":"module"}