{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Flex, FlexItem, FlexCentered, Title } from \"../styles/general/General.styled\";\nimport { SignUpImage, TextField, SignBtn, StyledForm } from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { registerationSchema } from \"./schema_validation/schemaValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignInOut = ({\n  location\n}) => {\n  _s();\n\n  const {\n    pathname\n  } = location;\n  console.log(pathname);\n  const signUpInitVals = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n  const signInInitVals = {\n    email: \"\",\n    password: \"\"\n  };\n  const initialValues = pathname === \"/signup\" ? signUpInitVals : signInInitVals;\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      p: \"10rem 4rem\",\n      mh: \"100vh\",\n      bgColor: \"rgba(224, 247, 250, 0.8)\",\n      h: \"60%\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        bgColor: \"#f3e5f5\",\n        h: \"75vh\",\n        br: \"6rem\",\n        children: [/*#__PURE__*/_jsxDEV(FlexItem, {\n          fg: \"1\",\n          h: \"75vh\",\n          children: /*#__PURE__*/_jsxDEV(SignUpImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexCentered, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            validationSchema: registerationSchema,\n            onSubmit: (values, {\n              setSubmitting,\n              resetForm\n            }) => {\n              setTimeout(() => {\n                setTimeout(() => {\n                  alert(JSON.stringify(values, null, 2));\n                  setSubmitting(false);\n                }, 1000);\n                resetForm();\n              }, 1500);\n            },\n            children: ({\n              values,\n              errors,\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Title, {\n                fs: \"3rem\",\n                children: pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledForm, {\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  fd: \"column\",\n                  ai: \"center\",\n                  children: [pathname === \"/signup\" ? /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Username\",\n                    name: \"username\",\n                    type: \"input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 25\n                  }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Email Address\",\n                    name: \"email\",\n                    type: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"password\",\n                    label: \"Password\",\n                    type: showPw ? \"text\" : \"password\",\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: () => setShowPw(!showPw),\n                          children: showPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 99,\n                            columnNumber: 35\n                          }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 101,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 29\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this), pathname === \"/signup\" ? /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"passwordConfirm\",\n                    name: \"passwordConfirm\",\n                    label: \"Confirm Password\",\n                    type: showConfirmPw ? \"text\" : \"password\",\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: () => setShowConfirmPw(!showConfirmPw),\n                          children: showConfirmPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 122,\n                            columnNumber: 37\n                          }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 124,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 117,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 31\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this) : null, /*#__PURE__*/_jsxDEV(SignBtn, {\n                    m: \"2rem 0 0 0\",\n                    type: \"submit\",\n                    variant: \"contained\",\n                    disabled: isSubmitting,\n                    children: pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignInOut, \"2p8ny6BI6b16B9fOoyLogYOFfzM=\");\n\n_c = SignInOut;\nexport default SignInOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInOut\");","map":{"version":3,"sources":["/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js"],"names":["React","useState","Container","Flex","FlexItem","FlexCentered","Title","SignUpImage","TextField","SignBtn","StyledForm","Navbar","Formik","VisibilityIcon","VisibilityOffIcon","IconButton","InputAdornment","registerationSchema","SignInOut","location","pathname","console","log","signUpInitVals","firstName","lastName","email","password","passwordConfirm","signInInitVals","initialValues","showPw","setShowPw","showConfirmPw","setShowConfirmPw","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","errors","isSubmitting","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Flex,\n  FlexItem,\n  FlexCentered,\n  Title\n} from \"../styles/general/General.styled\";\nimport {\n  SignUpImage,\n  TextField,\n  SignBtn,\n  StyledForm\n} from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { registerationSchema } from \"./schema_validation/schemaValidation\";\n\nconst SignInOut = ({ location }) => {\n  const { pathname } = location;\n  console.log(pathname);\n\n  const signUpInitVals = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n\n  const signInInitVals = {\n    email: \"\",\n    password: \"\"\n  };\n  const initialValues =\n    pathname === \"/signup\" ? signUpInitVals : signInInitVals;\n\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n\n  return (\n    <>\n      <Navbar />\n      <Container\n        p=\"10rem 4rem\"\n        mh=\"100vh\"\n        bgColor=\"rgba(224, 247, 250, 0.8)\"\n        h=\"60%\">\n        <Flex bgColor=\"#f3e5f5\" h=\"75vh\" br=\"6rem\">\n          <FlexItem fg=\"1\" h=\"75vh\">\n            <SignUpImage />\n          </FlexItem>\n          {/* <FlexItem w=\"75%\" m={pathname === \"/signup\" ? \"4rem 0 0 0\" : \"4rem 0 0 0\"}> */}\n          <FlexCentered>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={registerationSchema}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                setTimeout(() => {\n                  setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    setSubmitting(false);\n                  }, 1000);\n                  resetForm();\n                }, 1500);\n              }}>\n              {({ values, errors, isSubmitting }) => (\n                <>\n                  <Title fs=\"3rem\">\n                    {pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"}\n                  </Title>\n                  <StyledForm>\n                    <Flex fd=\"column\" ai=\"center\">\n                      {pathname === \"/signup\" ? (\n                        <TextField\n                          label=\"Username\"\n                          name=\"username\"\n                          type=\"input\"\n                        />\n                      ) : null}\n                      <TextField\n                        label=\"Email Address\"\n                        name=\"email\"\n                        type=\"email\"\n                      />\n                      <TextField\n                        name=\"password\"\n                        label=\"Password\"\n                        type={showPw ? \"text\" : \"password\"}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton onClick={() => setShowPw(!showPw)}>\n                                {showPw ? (\n                                  <VisibilityOffIcon />\n                                ) : (\n                                  <VisibilityIcon />\n                                )}\n                              </IconButton>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      {pathname === \"/signup\" ? (\n                        <TextField\n                          id=\"passwordConfirm\"\n                          name=\"passwordConfirm\"\n                          label=\"Confirm Password\"\n                          type={showConfirmPw ? \"text\" : \"password\"}\n                          InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton\n                                  onClick={() =>\n                                    setShowConfirmPw(!showConfirmPw)\n                                  }>\n                                  {showConfirmPw ? (\n                                    <VisibilityOffIcon />\n                                  ) : (\n                                    <VisibilityIcon />\n                                  )}\n                                </IconButton>\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      ) : null}\n                      <SignBtn\n                        m=\"2rem 0 0 0\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                        disabled={isSubmitting}>\n                        {pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"}\n                      </SignBtn>\n                      {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n                    </Flex>\n                  </StyledForm>\n                </>\n              )}\n            </Formik>\n          </FlexCentered>\n          {/* </FlexItem> */}\n        </Flex>\n      </Container>\n    </>\n  );\n};\n\nexport default SignInOut;\n"]},"metadata":{},"sourceType":"module"}