{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Flex, FlexItem, FlexCentered, Title } from \"../styles/general/General.styled\";\nimport { SignUpImage, TextField, SignBtn, StyledForm } from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignInOut = () => {\n  _s();\n\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      p: \"10rem 4rem\",\n      mh: \"100vh\",\n      bgColor: \"rgba(224, 247, 250, 0.8)\",\n      h: \"60%\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        bgColor: \"#f3e5f5\",\n        h: \"60vh\",\n        br: \"6rem\",\n        children: [/*#__PURE__*/_jsxDEV(FlexItem, {\n          fg: \"1\",\n          h: \"60vh\",\n          children: /*#__PURE__*/_jsxDEV(SignUpImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexItem, {\n          w: \"75%\",\n          children: /*#__PURE__*/_jsxDEV(FlexCentered, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: initialValues,\n              onSubmit: (values, {\n                setSubmitting,\n                resetForm\n              }) => {\n                setTimeout(() => {\n                  setSubmitting(false); // dispatch(registerUser(values));\n\n                  resetForm();\n                }, 1500);\n              },\n              children: ({\n                values,\n                errors,\n                isSubmitting\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Title, {\n                  fs: \"3rem\",\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledForm, {\n                  children: /*#__PURE__*/_jsxDEV(Flex, {\n                    fd: \"column\",\n                    jc: \"space-evenly\",\n                    ai: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"First Name\",\n                      name: \"firstName\",\n                      type: \"input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Last Name\",\n                      name: \"lastName\",\n                      type: \"input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Email Address\",\n                      name: \"email\",\n                      type: \"email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      name: \"password\",\n                      label: \"Password\",\n                      type: showPw ? \"text\" : \"password\",\n                      InputProps: {\n                        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"end\",\n                          children: /*#__PURE__*/_jsxDEV(IconButton, {\n                            onClick: () => setShowPw(!showPw),\n                            children: showPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 86,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 88,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 84,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 83,\n                          columnNumber: 31\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"passwordConfirm\",\n                      name: \"passwordConfirm\",\n                      label: \"Confirm Password\",\n                      type: showConfirmPw ? \"text\" : \"password\",\n                      InputProps: {\n                        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"end\",\n                          children: /*#__PURE__*/_jsxDEV(IconButton, {\n                            onClick: () => setShowConfirmPw(!showConfirmPw),\n                            children: showConfirmPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 108,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 110,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 103,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 102,\n                          columnNumber: 31\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(SignBtn, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      disabled: isSubmitting,\n                      children: \"Sign Up\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignInOut, \"2p8ny6BI6b16B9fOoyLogYOFfzM=\");\n\n_c = SignInOut;\nexport default SignInOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInOut\");","map":{"version":3,"sources":["/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js"],"names":["React","useState","Container","Flex","FlexItem","FlexCentered","Title","SignUpImage","TextField","SignBtn","StyledForm","Navbar","Formik","VisibilityIcon","VisibilityOffIcon","IconButton","InputAdornment","SignInOut","initialValues","firstName","lastName","email","password","passwordConfirm","showPw","setShowPw","showConfirmPw","setShowConfirmPw","values","setSubmitting","resetForm","setTimeout","errors","isSubmitting","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Flex,\n  FlexItem,\n  FlexCentered,\n  Title\n} from \"../styles/general/General.styled\";\nimport {\n  SignUpImage,\n  TextField,\n  SignBtn,\n  StyledForm\n} from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nconst SignInOut = () => {\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n\n  return (\n    <>\n      <Navbar />\n      <Container\n        p=\"10rem 4rem\"\n        mh=\"100vh\"\n        bgColor=\"rgba(224, 247, 250, 0.8)\"\n        h=\"60%\">\n        <Flex bgColor=\"#f3e5f5\" h=\"60vh\" br=\"6rem\">\n          <FlexItem fg=\"1\" h=\"60vh\">\n            <SignUpImage />\n          </FlexItem>\n          <FlexItem w=\"75%\">\n            <FlexCentered>\n              <Formik\n                initialValues={initialValues}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setTimeout(() => {\n                    setSubmitting(false);\n                    // dispatch(registerUser(values));\n                    resetForm();\n                  }, 1500);\n                }}>\n                {({ values, errors, isSubmitting }) => (\n                  <>\n                    <Title fs=\"3rem\">Sign Up</Title>\n                    <StyledForm>\n                      <Flex fd=\"column\" jc=\"space-evenly\" ai=\"center\">\n                        <TextField\n                          label=\"First Name\"\n                          name=\"firstName\"\n                          type=\"input\"\n                        />\n                        <TextField\n                          label=\"Last Name\"\n                          name=\"lastName\"\n                          type=\"input\"\n                        />\n                        <TextField\n                          label=\"Email Address\"\n                          name=\"email\"\n                          type=\"email\"\n                        />\n                        <TextField\n                          name=\"password\"\n                          label=\"Password\"\n                          type={showPw ? \"text\" : \"password\"}\n                          InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton onClick={() => setShowPw(!showPw)}>\n                                  {showPw ? (\n                                    <VisibilityOffIcon />\n                                  ) : (\n                                    <VisibilityIcon />\n                                  )}\n                                </IconButton>\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                        <TextField\n                          id=\"passwordConfirm\"\n                          name=\"passwordConfirm\"\n                          label=\"Confirm Password\"\n                          type={showConfirmPw ? \"text\" : \"password\"}\n                          InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton\n                                  onClick={() =>\n                                    setShowConfirmPw(!showConfirmPw)\n                                  }>\n                                  {showConfirmPw ? (\n                                    <VisibilityOffIcon />\n                                  ) : (\n                                    <VisibilityIcon />\n                                  )}\n                                </IconButton>\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                        <SignBtn\n                          type=\"submit\"\n                          variant=\"contained\"\n                          disabled={isSubmitting}>\n                          Sign Up\n                        </SignBtn>\n                        {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n                      </Flex>\n                    </StyledForm>\n                  </>\n                )}\n              </Formik>\n            </FlexCentered>\n          </FlexItem>\n        </Flex>\n      </Container>\n    </>\n  );\n};\n\nexport default SignInOut;\n"]},"metadata":{},"sourceType":"module"}