{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Capstone_OCA/client/src/utils/FormikTextField.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormikTextField = props => {\n  _s();\n\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n    ...props,\n    id: \"outlined-error-helper-text\",\n    required: true,\n    autoComplete: \"off\",\n    helperText: errorText,\n    error: !!errorText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormikTextField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = FormikTextField;\nexport default FormikTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikTextField\");","map":{"version":3,"sources":["/Users/danny/Capstone_OCA/client/src/utils/FormikTextField.js"],"names":["React","TextField","useField","FormikTextField","props","field","meta","errorText","error","touched"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBJ,QAAQ,CAACE,KAAD,CAA9B;AACA,QAAMG,SAAS,GAAGD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6BH,IAAI,CAACE,KAAlC,GAA0C,EAA5D;AAEA,sBACE,QAAC,SAAD,OACMH,KADN;AAAA,OAEMD,KAFN;AAGE,IAAA,EAAE,EAAC,4BAHL;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,UAAU,EAAEG,SANd;AAOE,IAAA,KAAK,EAAE,CAAC,CAACA;AAPX;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAfD;;GAAMJ,e;UACkBD,Q;;;KADlBC,e;AAiBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField } from \"formik\";\n\nconst FormikTextField = props => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n  return (\n    <TextField\n      {...field}\n      {...props}\n      id=\"outlined-error-helper-text\"\n      required\n      autoComplete=\"off\"\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nexport default FormikTextField;\n"]},"metadata":{},"sourceType":"module"}