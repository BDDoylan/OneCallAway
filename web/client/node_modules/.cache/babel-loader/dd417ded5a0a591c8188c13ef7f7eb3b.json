{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Flex, FlexItem, FlexCentered, Title, StyledLink } from \"../styles/general/General.styled\";\nimport { Image, TextField, SignBtn, StyledForm } from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { registerationSchema, loginSchema } from \"./schema_validation/schemaValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignInOut = ({\n  location\n}) => {\n  _s();\n\n  const {\n    pathname\n  } = location;\n  const signUpInitVals = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n  const signInInitVals = {\n    email: \"\",\n    password: \"\"\n  };\n  const initialValues = pathname === \"/signup\" ? signUpInitVals : signInInitVals;\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      p: \"10rem 4rem\",\n      mh: \"100vh\",\n      bgColor: \"rgba(224, 247, 250, 0.8)\",\n      h: \"60%\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        bgColor: \"#f3e5f5\",\n        h: \"75vh\",\n        br: \"6rem\",\n        children: [/*#__PURE__*/_jsxDEV(FlexItem, {\n          fg: \"1\",\n          h: \"75vh\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            pathname: pathname === \"/signup\" ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexItem, {\n          w: \"75%\",\n          m: pathname === \"/signup\" ? \"4rem 0 0 0\" : \"8rem 0 0 0\",\n          children: /*#__PURE__*/_jsxDEV(FlexCentered, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: initialValues,\n              validationSchema: pathname === \"signup\" ? registerationSchema : loginSchema,\n              onSubmit: (values, {\n                setSubmitting,\n                resetForm\n              }) => {\n                setTimeout(() => {\n                  setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    setSubmitting(false);\n                  }, 1000);\n                  resetForm();\n                }, 1500);\n              },\n              children: ({\n                values,\n                errors,\n                isSubmitting\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Title, {\n                  fs: \"3rem\",\n                  children: pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledForm, {\n                  children: /*#__PURE__*/_jsxDEV(Flex, {\n                    fd: \"column\",\n                    ai: \"center\",\n                    children: [pathname === \"/signup\" ? /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Username\",\n                      name: \"username\",\n                      type: \"input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 27\n                    }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Email Address\",\n                      name: \"email\",\n                      type: \"email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      name: \"password\",\n                      label: \"Password\",\n                      type: showPw ? \"text\" : \"password\",\n                      InputProps: {\n                        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"end\",\n                          children: /*#__PURE__*/_jsxDEV(IconButton, {\n                            onClick: () => setShowPw(!showPw),\n                            children: showPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 105,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 107,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 103,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 102,\n                          columnNumber: 31\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 25\n                    }, this), pathname === \"/signup\" ? /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"passwordConfirm\",\n                      name: \"passwordConfirm\",\n                      label: \"Confirm Password\",\n                      type: showConfirmPw ? \"text\" : \"password\",\n                      InputProps: {\n                        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"end\",\n                          children: /*#__PURE__*/_jsxDEV(IconButton, {\n                            onClick: () => setShowConfirmPw(!showConfirmPw),\n                            children: showConfirmPw ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 128,\n                              columnNumber: 39\n                            }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 130,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 123,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 122,\n                          columnNumber: 33\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 27\n                    }, this) : null, /*#__PURE__*/_jsxDEV(FlexItem, {\n                      h: \"auto\",\n                      children: pathname === \"/signup\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(StyledLink, {\n                          to: \"/signin\",\n                          children: \"Sign In\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"New to One Call Away?\", \" \", /*#__PURE__*/_jsxDEV(StyledLink, {\n                          to: \"/signup\",\n                          children: \"Sign Up\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(SignBtn, {\n                      m: \"2rem 0 0 0\",\n                      type: \"submit\",\n                      variant: \"contained\",\n                      disabled: isSubmitting,\n                      children: pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignInOut, \"2p8ny6BI6b16B9fOoyLogYOFfzM=\");\n\n_c = SignInOut;\nexport default SignInOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInOut\");","map":{"version":3,"sources":["/Users/danny/Capstone_OCA/client/src/components/pages/SignInOut.js"],"names":["React","useState","Container","Flex","FlexItem","FlexCentered","Title","StyledLink","Image","TextField","SignBtn","StyledForm","Navbar","Formik","VisibilityIcon","VisibilityOffIcon","IconButton","InputAdornment","registerationSchema","loginSchema","SignInOut","location","pathname","signUpInitVals","username","email","password","passwordConfirm","signInInitVals","initialValues","showPw","setShowPw","showConfirmPw","setShowConfirmPw","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","errors","isSubmitting","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Flex,\n  FlexItem,\n  FlexCentered,\n  Title,\n  StyledLink\n} from \"../styles/general/General.styled\";\nimport {\n  Image,\n  TextField,\n  SignBtn,\n  StyledForm\n} from \"../styles/SignInOut.styled\";\nimport Navbar from \"./general/Navbar\";\nimport { Formik } from \"formik\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport {\n  registerationSchema,\n  loginSchema\n} from \"./schema_validation/schemaValidation\";\n\nconst SignInOut = ({ location }) => {\n  const { pathname } = location;\n\n  const signUpInitVals = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n\n  const signInInitVals = {\n    email: \"\",\n    password: \"\"\n  };\n  const initialValues =\n    pathname === \"/signup\" ? signUpInitVals : signInInitVals;\n\n  const [showPw, setShowPw] = useState(false);\n  const [showConfirmPw, setShowConfirmPw] = useState(false);\n\n  return (\n    <>\n      <Navbar />\n      <Container\n        p=\"10rem 4rem\"\n        mh=\"100vh\"\n        bgColor=\"rgba(224, 247, 250, 0.8)\"\n        h=\"60%\">\n        <Flex bgColor=\"#f3e5f5\" h=\"75vh\" br=\"6rem\">\n          <FlexItem fg=\"1\" h=\"75vh\">\n            <Image pathname={pathname === \"/signup\" ? true : false} />\n          </FlexItem>\n          <FlexItem\n            w=\"75%\"\n            m={pathname === \"/signup\" ? \"4rem 0 0 0\" : \"8rem 0 0 0\"}>\n            <FlexCentered>\n              <Formik\n                initialValues={initialValues}\n                validationSchema={\n                  pathname === \"signup\" ? registerationSchema : loginSchema\n                }\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setTimeout(() => {\n                    setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      setSubmitting(false);\n                    }, 1000);\n                    resetForm();\n                  }, 1500);\n                }}>\n                {({ values, errors, isSubmitting }) => (\n                  <>\n                    <Title fs=\"3rem\">\n                      {pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"}\n                    </Title>\n                    <StyledForm>\n                      <Flex fd=\"column\" ai=\"center\">\n                        {pathname === \"/signup\" ? (\n                          <TextField\n                            label=\"Username\"\n                            name=\"username\"\n                            type=\"input\"\n                          />\n                        ) : null}\n                        <TextField\n                          label=\"Email Address\"\n                          name=\"email\"\n                          type=\"email\"\n                        />\n                        <TextField\n                          name=\"password\"\n                          label=\"Password\"\n                          type={showPw ? \"text\" : \"password\"}\n                          InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton onClick={() => setShowPw(!showPw)}>\n                                  {showPw ? (\n                                    <VisibilityOffIcon />\n                                  ) : (\n                                    <VisibilityIcon />\n                                  )}\n                                </IconButton>\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                        {pathname === \"/signup\" ? (\n                          <TextField\n                            id=\"passwordConfirm\"\n                            name=\"passwordConfirm\"\n                            label=\"Confirm Password\"\n                            type={showConfirmPw ? \"text\" : \"password\"}\n                            InputProps={{\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                  <IconButton\n                                    onClick={() =>\n                                      setShowConfirmPw(!showConfirmPw)\n                                    }>\n                                    {showConfirmPw ? (\n                                      <VisibilityOffIcon />\n                                    ) : (\n                                      <VisibilityIcon />\n                                    )}\n                                  </IconButton>\n                                </InputAdornment>\n                              )\n                            }}\n                          />\n                        ) : null}\n                        <FlexItem h=\"auto\">\n                          {pathname === \"/signup\" ? (\n                            <>\n                              Already have an account?{\" \"}\n                              <StyledLink to=\"/signin\">Sign In</StyledLink>\n                            </>\n                          ) : (\n                            <>\n                              New to One Call Away?{\" \"}\n                              <StyledLink to=\"/signup\">Sign Up</StyledLink>\n                            </>\n                          )}\n                        </FlexItem>\n                        <SignBtn\n                          m=\"2rem 0 0 0\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                          disabled={isSubmitting}>\n                          {pathname === \"/signup\" ? \"Sign Up\" : \"Sign In\"}\n                        </SignBtn>\n                        {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n                      </Flex>\n                    </StyledForm>\n                  </>\n                )}\n              </Formik>\n            </FlexCentered>\n          </FlexItem>\n        </Flex>\n      </Container>\n    </>\n  );\n};\n\nexport default SignInOut;\n"]},"metadata":{},"sourceType":"module"}